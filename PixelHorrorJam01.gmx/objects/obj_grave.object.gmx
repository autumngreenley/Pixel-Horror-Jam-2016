<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>corpse = instance_nearest(x, y, obj_dragdroptest);

/*if( x &lt; (corpse.x) &lt; ((sprite_get_width(sprite_index)-sprite_get_width(corpse.sprite_index) ) + x) ){
    if(corpse.bid == bid){
        blah=32;
        with(corpse){
            instance_destroy();
        }
        image_index++;
    }
}*/


if(obj_BodyShelf.currently_closed==true){
    if(corpse.bid == bid){
       // if( x &lt; (corpse.x) &lt; ((sprite_get_width(sprite_index)-sprite_get_width(corpse.sprite_index) ) + x) ){
        
        if( x &lt; (corpse.x) &amp;&amp; (corpse.x) &lt; ((sprite_get_width(sprite_index)-sprite_get_width(corpse.sprite_index) ) + x) ){
        
        
        
            bippity=100;
            //if( y &lt; (corpse.y) &lt; ((sprite_get_height(sprite_index)-sprite_get_height(corpse.sprite_index) ) + y) ){
            if( y &lt; (corpse.y) &amp;&amp;
            (corpse.y) &lt; ((sprite_get_height(sprite_index)-sprite_get_height(corpse.sprite_index) ) + y) ){
                with(corpse){
                    instance_destroy();
                }
                image_index++;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
